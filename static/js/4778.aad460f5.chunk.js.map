{"version":3,"file":"static/js/4778.aad460f5.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","components/table/TableMoreMenu.js","components/table/TableEmptyRows.js","components/table/TableHeadCustom.js","components/table/TableSearchNotFound.js","components/table/TableSelectedActions.js","hooks/useTable.js","hooks/useTabs.js","sections/@dashboard/invoice/InvoiceAnalytic.js","sections/@dashboard/invoice/list/InvoiceTableRow.js","sections/@dashboard/invoice/list/InvoiceTableToolbar.js","pages/dashboard/InvoiceList.js","../node_modules/lodash/sumBy.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbs.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  links: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.any,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import isString from 'lodash/isString';\r\nimport PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {isString(moreLink) ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n// @mui\r\nimport { IconButton } from '@mui/material';\r\n//\r\nimport Iconify from '../Iconify';\r\nimport MenuPopover from '../MenuPopover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTableMoreMenu.propTypes = {\r\n  actions: PropTypes.node,\r\n};\r\n\r\nexport default function TableMoreMenu({ actions }) {\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const handleOpen = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={handleOpen}>\r\n        <Iconify icon={'eva:more-vertical-fill'} width={20} height={20} />\r\n      </IconButton>\r\n\r\n      <MenuPopover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        arrow=\"right-top\"\r\n        sx={{\r\n          mt: -1,\r\n          width: 160,\r\n          '& .MuiMenuItem-root': {\r\n            px: 1,\r\n            typography: 'body2',\r\n            borderRadius: 0.75,\r\n            '& svg': { mr: 2, width: 20, height: 20 },\r\n          },\r\n        }}\r\n      >\r\n        {actions}\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { TableRow, TableCell } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTableEmptyRows.propTypes = {\r\n  emptyRows: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n\r\nexport default function TableEmptyRows({ emptyRows, height }) {\r\n  if (!emptyRows) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        ...(height && {\r\n          height: height * emptyRows,\r\n        }),\r\n      }}\r\n    >\r\n      <TableCell colSpan={9} />\r\n    </TableRow>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst visuallyHidden = {\r\n  border: 0,\r\n  margin: -1,\r\n  padding: 0,\r\n  width: '1px',\r\n  height: '1px',\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  whiteSpace: 'nowrap',\r\n  clip: 'rect(0 0 0 0)',\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTableHeadCustom.propTypes = {\r\n  onSort: PropTypes.func,\r\n  orderBy: PropTypes.string,\r\n  headLabel: PropTypes.array,\r\n  rowCount: PropTypes.number,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  order: PropTypes.oneOf(['asc', 'desc']),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function TableHeadCustom({\r\n  order,\r\n  orderBy,\r\n  rowCount = 0,\r\n  headLabel,\r\n  numSelected = 0,\r\n  onSort,\r\n  onSelectAllRows,\r\n  sx,\r\n}) {\r\n  return (\r\n    <TableHead sx={sx}>\r\n      <TableRow>\r\n        {onSelectAllRows && (\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={(event) => onSelectAllRows(event.target.checked)}\r\n            />\r\n          </TableCell>\r\n        )}\r\n\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            {onSort ? (\r\n              <TableSortLabel\r\n                hideSortIcon\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={() => onSort(headCell.id)}\r\n                sx={{ textTransform: 'capitalize' }}\r\n              >\r\n                {headCell.label}\r\n\r\n                {orderBy === headCell.id ? (\r\n                  <Box sx={{ ...visuallyHidden }}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              headCell.label\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","// @mui\r\nimport { TableRow, TableBody, TableCell } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableSearchNotFound() {\r\n  return (\r\n    <TableBody>\r\n      <TableRow>\r\n        <TableCell align=\"center\" colSpan={9} sx={{ py: 10, typography: 'h6' }}>\r\n          No Data\r\n        </TableCell>\r\n      </TableRow>\r\n    </TableBody>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Checkbox, Typography, Stack } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTableSelectedActions.propTypes = {\r\n  dense: PropTypes.bool,\r\n  actions: PropTypes.node,\r\n  rowCount: PropTypes.number,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n};\r\n\r\nexport default function TableSelectedActions({ dense, actions, rowCount, numSelected, onSelectAllRows }) {\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        px: 2,\r\n        top: 0,\r\n        right: 8,\r\n        zIndex: 9,\r\n        height: 58,\r\n        borderRadius: 1,\r\n        position: 'absolute',\r\n        width: 'calc(100% - 16px)',\r\n        bgcolor: 'primary.lighter',\r\n        ...(dense && {\r\n          pl: 1,\r\n          height: 38,\r\n        }),\r\n      }}\r\n    >\r\n      <Checkbox\r\n        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n        checked={rowCount > 0 && numSelected === rowCount}\r\n        onChange={(event) => onSelectAllRows(event.target.checked)}\r\n      />\r\n\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        sx={{\r\n          ml: 2,\r\n          flexGrow: 1,\r\n          color: 'primary.main',\r\n          ...(dense && {\r\n            ml: 3,\r\n          }),\r\n        }}\r\n      >\r\n        {numSelected} selected\r\n      </Typography>\r\n\r\n      {actions && actions}\r\n    </Stack>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTable(props) {\r\n  const [dense, setDense] = useState(props?.defaultDense || false);\r\n\r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [order, setOrder] = useState(props?.defaultOrder || 'asc');\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [selected, setSelected] = useState(props?.defaultSelected || []);\r\n\r\n  const onSort = (id) => {\r\n    const isAsc = orderBy === id && order === 'asc';\r\n    if (id !== '') {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(id);\r\n    }\r\n  };\r\n\r\n  const onSelectRow = (id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const onSelectAllRows = (checked, newSelecteds) => {\r\n    if (checked) {\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const onChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const onChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const onChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  // filter\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    setPage,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    setSelected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onChangeRowsPerPage,\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nexport function emptyRows(page, rowsPerPage, arrayLength) {\r\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n}\r\n","import { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTabs(defaultValues) {\r\n  const [currentTab, setCurrentTab] = useState(defaultValues || '');\r\n\r\n  return {\r\n    currentTab,\r\n    onChangeTab: (event, newValue) => {\r\n      setCurrentTab(newValue);\r\n    },\r\n    setCurrentTab,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Stack, Typography, Box, CircularProgress } from '@mui/material';\r\n// utils\r\nimport { fShortenNumber, fCurrency } from '../../../utils/formatNumber';\r\n// components\r\nimport Iconify from '../../../components/Iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nInvoiceAnalytic.propTypes = {\r\n  title: PropTypes.string,\r\n  color: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  percent: PropTypes.number,\r\n  price: PropTypes.number,\r\n  total: PropTypes.number,\r\n};\r\n\r\nexport default function InvoiceAnalytic({ title, total, icon, color, percent, price }) {\r\n  return (\r\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ width: 1, minWidth: 200 }}>\r\n      <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ position: 'relative' }}>\r\n        <Iconify icon={icon} sx={{ color, width: 24, height: 24, position: 'absolute' }} />\r\n\r\n        <CircularProgress variant=\"determinate\" value={percent} size={56} thickness={4} sx={{ color, opacity: 0.48 }} />\r\n\r\n        <CircularProgress\r\n          variant=\"determinate\"\r\n          value={100}\r\n          size={56}\r\n          thickness={4}\r\n          sx={{ color: 'grey.50016', position: 'absolute', top: 0, left: 0, opacity: 0.48 }}\r\n        />\r\n      </Stack>\r\n\r\n      <Stack spacing={0.5} sx={{ ml: 2 }}>\r\n        <Typography variant=\"h6\">{title}</Typography>\r\n\r\n        <Typography variant=\"subtitle2\">\r\n          {fShortenNumber(total)}{' '}\r\n          <Box component=\"span\" sx={{ color: 'text.secondary', typography: 'body2' }}>\r\n            invoice\r\n          </Box>\r\n        </Typography>\r\n\r\n        <Typography variant=\"subtitle2\" sx={{ color }}>\r\n          {fCurrency(price)}\r\n        </Typography>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Checkbox, TableRow, TableCell, Typography, Stack, Link } from '@mui/material';\r\n// utils\r\nimport { fDate } from '../../../../utils/formatTime';\r\nimport createAvatar from '../../../../utils/createAvatar';\r\nimport { fCurrency } from '../../../../utils/formatNumber';\r\n// components\r\nimport Avatar from '../../../../components/Avatar';\r\nimport Label from '../../../../components/Label';\r\nimport { TableMoreMenu } from '../../../../components/table';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nInvoiceTableRow.propTypes = {\r\n  actions: PropTypes.node,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  row: PropTypes.object.isRequired,\r\n  selected: PropTypes.bool,\r\n};\r\n\r\nexport default function InvoiceTableRow({ actions, row, selected, onSelectRow, onViewRow }) {\r\n  const theme = useTheme();\r\n\r\n  const { sent, invoiceNumber, createDate, dueDate, status, invoiceTo, totalPrice } = row;\r\n\r\n  return (\r\n    <TableRow hover selected={selected}>\r\n      <TableCell padding=\"checkbox\">\r\n        <Checkbox checked={selected} onClick={onSelectRow} />\r\n      </TableCell>\r\n\r\n      <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Avatar alt={invoiceTo.name} color={createAvatar(invoiceTo.name).color} sx={{ mr: 2 }}>\r\n          {createAvatar(invoiceTo.name).name}\r\n        </Avatar>\r\n\r\n        <Stack>\r\n          <Typography variant=\"subtitle2\" noWrap>\r\n            {invoiceTo.name}\r\n          </Typography>\r\n\r\n          <Link noWrap variant=\"body2\" onClick={onViewRow} sx={{ color: 'text.disabled', cursor: 'pointer' }}>\r\n            {invoiceNumber}\r\n          </Link>\r\n        </Stack>\r\n      </TableCell>\r\n\r\n      <TableCell align=\"left\">{fDate(createDate)}</TableCell>\r\n\r\n      <TableCell align=\"left\">{fDate(dueDate)}</TableCell>\r\n\r\n      <TableCell align=\"center\">{fCurrency(totalPrice)}</TableCell>\r\n\r\n      <TableCell align=\"center\" sx={{ textTransform: 'capitalize' }}>\r\n        {sent}\r\n      </TableCell>\r\n\r\n      <TableCell align=\"left\">\r\n        <Label\r\n          variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\r\n          color={\r\n            (status === 'paid' && 'success') ||\r\n            (status === 'unpaid' && 'warning') ||\r\n            (status === 'overdue' && 'error') ||\r\n            'default'\r\n          }\r\n          sx={{ textTransform: 'capitalize' }}\r\n        >\r\n          {status}\r\n        </Label>\r\n      </TableCell>\r\n\r\n      <TableCell align=\"right\">\r\n        <TableMoreMenu actions={actions} />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Stack, InputAdornment, TextField, MenuItem } from '@mui/material';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst INPUT_WIDTH = 160;\r\n\r\nInvoiceTableToolbar.propTypes = {\r\n  filterName: PropTypes.string,\r\n  filterService: PropTypes.string,\r\n  filterEndDate: PropTypes.instanceOf(Date),\r\n  filterStartDate: PropTypes.instanceOf(Date),\r\n  onFilterName: PropTypes.func,\r\n  onFilterEndDate: PropTypes.func,\r\n  onFilterService: PropTypes.func,\r\n  onFilterStartDate: PropTypes.func,\r\n  optionsService: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nexport default function InvoiceTableToolbar({\r\n  optionsService,\r\n  filterStartDate,\r\n  filterEndDate,\r\n  filterName,\r\n  filterService,\r\n  onFilterName,\r\n  onFilterService,\r\n  onFilterStartDate,\r\n  onFilterEndDate,\r\n}) {\r\n  return (\r\n    <Stack spacing={2} direction={{ xs: 'column', md: 'row' }} sx={{ py: 2.5, px: 3 }}>\r\n      <TextField\r\n        fullWidth\r\n        select\r\n        label=\"Service type\"\r\n        value={filterService}\r\n        onChange={onFilterService}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            sx: { '& .MuiPaper-root': { maxHeight: 260 } },\r\n          },\r\n        }}\r\n        sx={{\r\n          maxWidth: { md: INPUT_WIDTH },\r\n          textTransform: 'capitalize',\r\n        }}\r\n      >\r\n        {optionsService.map((option) => (\r\n          <MenuItem\r\n            key={option}\r\n            value={option}\r\n            sx={{\r\n              mx: 1,\r\n              my: 0.5,\r\n              borderRadius: 0.75,\r\n              typography: 'body2',\r\n              textTransform: 'capitalize',\r\n            }}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n      <DatePicker\r\n        label=\"Start date\"\r\n        value={filterStartDate}\r\n        onChange={onFilterStartDate}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            fullWidth\r\n            sx={{\r\n              maxWidth: { md: INPUT_WIDTH },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n\r\n      <DatePicker\r\n        label=\"End date\"\r\n        value={filterEndDate}\r\n        onChange={onFilterEndDate}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            fullWidth\r\n            sx={{\r\n              maxWidth: { md: INPUT_WIDTH },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n\r\n      <TextField\r\n        fullWidth\r\n        value={filterName}\r\n        onChange={(event) => onFilterName(event.target.value)}\r\n        placeholder=\"Search client or invoice number...\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Iconify icon={'eva:search-fill'} sx={{ color: 'text.disabled', width: 20, height: 20 }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n","import sumBy from 'lodash/sumBy';\r\nimport { useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Tab,\r\n  Tabs,\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Switch,\r\n  Button,\r\n  Tooltip,\r\n  Divider,\r\n  MenuItem,\r\n  TableBody,\r\n  Container,\r\n  IconButton,\r\n  TableContainer,\r\n  TablePagination,\r\n  FormControlLabel,\r\n} from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useTabs from '../../hooks/useTabs';\r\nimport useSettings from '../../hooks/useSettings';\r\nimport useTable, { getComparator, emptyRows } from '../../hooks/useTable';\r\n// _mock_\r\nimport { _invoices } from '../../_mock';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Label from '../../components/Label';\r\nimport Iconify from '../../components/Iconify';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { TableEmptyRows, TableHeadCustom, TableSearchNotFound, TableSelectedActions } from '../../components/table';\r\n// sections\r\nimport InvoiceAnalytic from '../../sections/@dashboard/invoice/InvoiceAnalytic';\r\nimport { InvoiceTableRow, InvoiceTableToolbar } from '../../sections/@dashboard/invoice/list';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SERVICE_OPTIONS = [\r\n  'all',\r\n  'full stack development',\r\n  'backend development',\r\n  'ui design',\r\n  'ui/ux design',\r\n  'front end development',\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'invoiceNumber', label: 'Client', align: 'left' },\r\n  { id: 'createDate', label: 'Create', align: 'left' },\r\n  { id: 'dueDate', label: 'Due', align: 'left' },\r\n  { id: 'price', label: 'Amount', align: 'center', width: 140 },\r\n  { id: 'sent', label: 'Sent', align: 'center', width: 140 },\r\n  { id: 'status', label: 'Status', align: 'left' },\r\n  { id: '' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceList() {\r\n  const theme = useTheme();\r\n\r\n  const { themeStretch } = useSettings();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    dense,\r\n    page,\r\n    order,\r\n    orderBy,\r\n    rowsPerPage,\r\n    setPage,\r\n    //\r\n    selected,\r\n    setSelected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangeDense,\r\n    onChangePage,\r\n    onChangeRowsPerPage,\r\n  } = useTable({ defaultOrderBy: 'createDate' });\r\n\r\n  const [tableData, setTableData] = useState(_invoices);\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [filterService, setFilterService] = useState('all');\r\n\r\n  const [filterStartDate, setFilterStartDate] = useState(null);\r\n\r\n  const [filterEndDate, setFilterEndDate] = useState(null);\r\n\r\n  const { currentTab: filterStatus, onChangeTab: onFilterStatus } = useTabs('all');\r\n\r\n  const handleFilterName = (filterName) => {\r\n    setFilterName(filterName);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleFilterService = (event) => {\r\n    setFilterService(event.target.value);\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    const deleteRow = tableData.filter((row) => row.id !== id);\r\n    setSelected([]);\r\n    setTableData(deleteRow);\r\n  };\r\n\r\n  const handleDeleteRows = (selected) => {\r\n    const deleteRows = tableData.filter((row) => !selected.includes(row.id));\r\n    setSelected([]);\r\n    setTableData(deleteRows);\r\n  };\r\n\r\n  const handleEditRow = (id) => {\r\n    navigate(PATH_DASHBOARD.invoice.edit(id));\r\n  };\r\n\r\n  const handleViewRow = (id) => {\r\n    navigate(PATH_DASHBOARD.invoice.view(id));\r\n  };\r\n\r\n  const dataFiltered = applySortFilter({\r\n    tableData,\r\n    comparator: getComparator(order, orderBy),\r\n    filterName,\r\n    filterService,\r\n    filterStatus,\r\n    filterStartDate,\r\n    filterEndDate,\r\n  });\r\n\r\n  const isNotFound = !dataFiltered.length;\r\n\r\n  const getLengthByStatus = (status) => tableData.filter((item) => item.status === status).length;\r\n\r\n  const getTotalPriceByStatus = (status) =>\r\n    sumBy(\r\n      tableData.filter((item) => item.status === status),\r\n      'totalPrice'\r\n    );\r\n\r\n  const getPercentByStatus = (status) => (getLengthByStatus(status) / tableData.length) * 100;\r\n\r\n  const TABS = [\r\n    { value: 'all', label: 'All', color: 'info', count: tableData.length },\r\n    { value: 'paid', label: 'Paid', color: 'success', count: getLengthByStatus('paid') },\r\n    { value: 'unpaid', label: 'Unpaid', color: 'warning', count: getLengthByStatus('unpaid') },\r\n    { value: 'overdue', label: 'Overdue', color: 'error', count: getLengthByStatus('overdue') },\r\n    { value: 'draft', label: 'Draft', color: 'default', count: getLengthByStatus('draft') },\r\n  ];\r\n\r\n  return (\r\n    <Page title=\"Invoice: List\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Invoice List\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'Invoices', href: PATH_DASHBOARD.invoice.root },\r\n            { name: 'List' },\r\n          ]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              to={PATH_DASHBOARD.invoice.new}\r\n              startIcon={<Iconify icon={'eva:plus-fill'} />}\r\n            >\r\n              New Invoice\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <Card sx={{ mb: 5 }}>\r\n          <Scrollbar>\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n              sx={{ py: 2 }}\r\n            >\r\n              <InvoiceAnalytic\r\n                title=\"Total\"\r\n                total={tableData.length}\r\n                percent={100}\r\n                price={sumBy(tableData, 'totalPrice')}\r\n                icon=\"ic:round-receipt\"\r\n                color={theme.palette.info.main}\r\n              />\r\n              <InvoiceAnalytic\r\n                title=\"Paid\"\r\n                total={getLengthByStatus('paid')}\r\n                percent={getPercentByStatus('paid')}\r\n                price={getTotalPriceByStatus('paid')}\r\n                icon=\"eva:checkmark-circle-2-fill\"\r\n                color={theme.palette.success.main}\r\n              />\r\n              <InvoiceAnalytic\r\n                title=\"Unpaid\"\r\n                total={getLengthByStatus('unpaid')}\r\n                percent={getPercentByStatus('unpaid')}\r\n                price={getTotalPriceByStatus('unpaid')}\r\n                icon=\"eva:clock-fill\"\r\n                color={theme.palette.warning.main}\r\n              />\r\n              <InvoiceAnalytic\r\n                title=\"Overdue\"\r\n                total={getLengthByStatus('overdue')}\r\n                percent={getPercentByStatus('overdue')}\r\n                price={getTotalPriceByStatus('overdue')}\r\n                icon=\"eva:bell-fill\"\r\n                color={theme.palette.error.main}\r\n              />\r\n              <InvoiceAnalytic\r\n                title=\"Draft\"\r\n                total={getLengthByStatus('draft')}\r\n                percent={getPercentByStatus('draft')}\r\n                price={getTotalPriceByStatus('draft')}\r\n                icon=\"eva:file-fill\"\r\n                color={theme.palette.text.secondary}\r\n              />\r\n            </Stack>\r\n          </Scrollbar>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Tabs\r\n            allowScrollButtonsMobile\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            value={filterStatus}\r\n            onChange={onFilterStatus}\r\n            sx={{ px: 2, bgcolor: 'background.neutral' }}\r\n          >\r\n            {TABS.map((tab) => (\r\n              <Tab\r\n                disableRipple\r\n                key={tab.value}\r\n                value={tab.value}\r\n                label={\r\n                  <Stack spacing={1} direction=\"row\" alignItems=\"center\">\r\n                    <div>{tab.label}</div> <Label color={tab.color}> {tab.count} </Label>\r\n                  </Stack>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs>\r\n\r\n          <Divider />\r\n\r\n          <InvoiceTableToolbar\r\n            filterName={filterName}\r\n            filterService={filterService}\r\n            filterStartDate={filterStartDate}\r\n            filterEndDate={filterEndDate}\r\n            onFilterName={handleFilterName}\r\n            onFilterService={handleFilterService}\r\n            onFilterStartDate={(newValue) => {\r\n              setFilterStartDate(newValue);\r\n            }}\r\n            onFilterEndDate={(newValue) => {\r\n              setFilterEndDate(newValue);\r\n            }}\r\n            optionsService={SERVICE_OPTIONS}\r\n          />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800, position: 'relative' }}>\r\n              {selected.length > 0 && (\r\n                <TableSelectedActions\r\n                  dense={dense}\r\n                  numSelected={selected.length}\r\n                  rowCount={tableData.length}\r\n                  onSelectAllRows={(checked) =>\r\n                    onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                  actions={\r\n                    <Stack spacing={1} direction=\"row\">\r\n                      <Tooltip title=\"Sent\">\r\n                        <IconButton color=\"primary\">\r\n                          <Iconify icon={'ic:round-send'} />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n\r\n                      <Tooltip title=\"Download\">\r\n                        <IconButton color=\"primary\">\r\n                          <Iconify icon={'eva:download-outline'} />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n\r\n                      <Tooltip title=\"Print\">\r\n                        <IconButton color=\"primary\">\r\n                          <Iconify icon={'eva:printer-fill'} />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n\r\n                      <Tooltip title=\"Delete\">\r\n                        <IconButton color=\"primary\" onClick={() => handleDeleteRows(selected)}>\r\n                          <Iconify icon={'eva:trash-2-outline'} />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </Stack>\r\n                  }\r\n                />\r\n              )}\r\n\r\n              <Table size={dense ? 'small' : 'medium'}>\r\n                <TableHeadCustom\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={selected.length}\r\n                  onSort={onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                    <InvoiceTableRow\r\n                      key={row.id}\r\n                      row={row}\r\n                      selected={selected.includes(row.id)}\r\n                      onSelectRow={() => onSelectRow(row.id)}\r\n                      onViewRow={() => handleViewRow(row.id)}\r\n                      actions={\r\n                        <>\r\n                          <MenuItem onClick={() => handleDeleteRow(row.id)} sx={{ color: 'error.main' }}>\r\n                            <Iconify icon={'eva:trash-2-outline'} />\r\n                            Delete\r\n                          </MenuItem>\r\n\r\n                          <MenuItem onClick={() => handleViewRow(row.id)}>\r\n                            <Iconify icon={'eva:eye-fill'} />\r\n                            View\r\n                          </MenuItem>\r\n\r\n                          <MenuItem onClick={() => handleEditRow(row.id)}>\r\n                            <Iconify icon={'eva:edit-fill'} />\r\n                            Edit\r\n                          </MenuItem>\r\n                        </>\r\n                      }\r\n                    />\r\n                  ))}\r\n\r\n                  <TableEmptyRows height={dense ? 56 : 76} emptyRows={emptyRows(page, rowsPerPage, tableData.length)} />\r\n                </TableBody>\r\n\r\n                {isNotFound && <TableSearchNotFound />}\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <Box sx={{ position: 'relative' }}>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={dataFiltered.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={onChangePage}\r\n              onRowsPerPageChange={onChangeRowsPerPage}\r\n            />\r\n\r\n            <FormControlLabel\r\n              control={<Switch checked={dense} onChange={onChangeDense} />}\r\n              label=\"Dense\"\r\n              sx={{ px: 3, py: 1.5, top: 0, position: { md: 'absolute' } }}\r\n            />\r\n          </Box>\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applySortFilter({\r\n  tableData,\r\n  comparator,\r\n  filterName,\r\n  filterStatus,\r\n  filterService,\r\n  filterStartDate,\r\n  filterEndDate,\r\n}) {\r\n  const stabilizedThis = tableData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  tableData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (filterName) {\r\n    tableData = tableData.filter(\r\n      (item) =>\r\n        item.invoiceNumber.toLowerCase().indexOf(filterName.toLowerCase()) !== -1 ||\r\n        item.invoiceTo.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (filterStatus !== 'all') {\r\n    tableData = tableData.filter((item) => item.status === filterStatus);\r\n  }\r\n\r\n  if (filterService !== 'all') {\r\n    tableData = tableData.filter((item) => item.items.some((c) => c.service === filterService));\r\n  }\r\n\r\n  if (filterStartDate && filterEndDate) {\r\n    tableData = tableData.filter(\r\n      (item) =>\r\n        item.createDate.getTime() >= filterStartDate.getTime() && item.createDate.getTime() <= filterEndDate.getTime()\r\n    );\r\n  }\r\n\r\n  return tableData;\r\n}\r\n","var baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nmodule.exports = sumBy;\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","TableMoreMenu","actions","useState","open","setOpen","IconButton","onClick","event","currentTarget","Iconify","MenuPopover","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","arrow","px","typography","TableEmptyRows","emptyRows","TableRow","TableCell","colSpan","visuallyHidden","border","margin","padding","position","clip","TableHeadCustom","order","orderBy","rowCount","headLabel","numSelected","onSort","onSelectAllRows","TableHead","Checkbox","indeterminate","checked","onChange","headCell","align","sortDirection","id","minWidth","TableSortLabel","hideSortIcon","active","direction","textTransform","label","TableSearchNotFound","TableBody","py","TableSelectedActions","dense","Stack","top","right","zIndex","pl","ml","useTable","props","defaultDense","setDense","defaultOrderBy","setOrderBy","defaultOrder","setOrder","defaultCurrentPage","page","setPage","defaultRowsPerPage","rowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","newSelecteds","onChangePage","newPage","onChangeDense","onChangeRowsPerPage","parseInt","value","descendingComparator","a","b","getComparator","arrayLength","Math","max","useTabs","defaultValues","currentTab","setCurrentTab","onChangeTab","newValue","InvoiceAnalytic","title","total","percent","price","justifyContent","CircularProgress","size","thickness","opacity","left","spacing","fShortenNumber","fCurrency","InvoiceTableRow","row","onViewRow","theme","useTheme","sent","invoiceNumber","createDate","dueDate","status","invoiceTo","totalPrice","hover","Avatar","alt","createAvatar","cursor","fDate","Label","palette","mode","InvoiceTableToolbar","optionsService","filterStartDate","filterEndDate","filterName","filterService","onFilterName","onFilterService","onFilterStartDate","onFilterEndDate","xs","md","TextField","fullWidth","select","SelectProps","MenuProps","maxHeight","option","MenuItem","mx","my","DatePicker","renderInput","params","placeholder","InputProps","startAdornment","InputAdornment","SERVICE_OPTIONS","TABLE_HEAD","InvoiceList","themeStretch","useSettings","navigate","useNavigate","_invoices","tableData","setTableData","setFilterName","setFilterService","setFilterStartDate","setFilterEndDate","filterStatus","onFilterStatus","handleViewRow","PATH_DASHBOARD","dataFiltered","comparator","stabilizedThis","el","index","sort","filter","item","toLowerCase","items","some","c","service","getTime","applySortFilter","isNotFound","getLengthByStatus","getTotalPriceByStatus","sumBy","getPercentByStatus","TABS","count","Page","Container","Button","startIcon","Card","Scrollbar","divider","Divider","orientation","flexItem","borderStyle","info","main","success","warning","error","text","secondary","Tabs","allowScrollButtonsMobile","scrollButtons","tab","Tab","disableRipple","TableContainer","Tooltip","deleteRows","includes","handleDeleteRows","Table","deleteRow","handleDeleteRow","TablePagination","rowsPerPageOptions","onPageChange","onRowsPerPageChange","FormControlLabel","control","Switch","baseIteratee","require","baseSum","module","exports","array","iteratee"],"sourceRoot":""}